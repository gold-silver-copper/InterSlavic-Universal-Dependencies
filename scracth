print(jellyfish.levenshtein_distance('tylko', 'samo'))
print(jellyfish.levenshtein_distance('tylko', 'le'))
print(jellyfish.levenshtein_distance('tylko', 'toliko'))
print('/n')
print(jellyfish.jaro_winkler_similarity('tylko', 'samo'))
print(jellyfish.jaro_winkler_similarity('tylko', 'le'))
print(jellyfish.jaro_winkler_similarity('tylko', 'toliko'))
print('/n')
print(jellyfish.damerau_levenshtein_distance('tylko', 'samo'))
print(jellyfish.damerau_levenshtein_distance('tylko', 'le'))
print(jellyfish.damerau_levenshtein_distance('tylko', 'toliko'))

4
4
2
/n
0.48333333333333334
0.0
0.8400000000000001
/n
4
4
2



PATH = os.path.dirname(sys.argv[0])

with open("isvwords.json") as f:
    d = json.load(f)
  #  print(d)

print(d[123]['pl'])


data_file = open("pl_pud-ud-train.conllu", "r", encoding="utf-8")
for tokenlist in conllu.parse_incr(data_file):

    wordcount = 0
    isvwordcount = 0
    print(tokenlist)

    for token in tokenlist:
        

        

        if token["form"] not in string.punctuation:

            wordcount = wordcount+1





        for meow in d:
            if token["lemma"] == meow["pl"]:
                print(token["lemma"],' ', token["form"],' ', meow["isv"])
                isvwordcount = isvwordcount+1


        

    #    print('  ')

    print(f"WORDS IN SENTENCE: {wordcount}")
    print(f"ISV WORDS IN SENTENCE: {isvwordcount}")

   # print(tokenlist[0]["lemma"])
    print('\n')



oświadczyć oświadczyła VERB praet:sg:f:perf root {'Aspect': 'Perf', 'Gender': 'Fem', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'} None
wcześnie wcześniej ADV adv:com advmod {'Degree': 'Cmp'} {'SpaceAfter': 'No'}
wcześnie wcześniej ADV {'Degree': 'Cmp'}
że że SCONJ comp mark None None
że że SCONJ None
że da SCONJ None
wyglądać wygląda VERB fin:sg:ter:imperf ccomp {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Sing', 'Person': '3', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'} None
na na ADP prep:acc case {'AdpType': 'Prep'} {'Case': 'Acc'}
na na ADP {'AdpType': 'Prep'}
na na ADP {'AdpType': 'Prep'}
to to PRON subst:sg:acc:n:ncol obl:arg {'Case': 'Acc', 'Gender': 'Neut', 'Number': 'Sing', 'PronType': 'Dem'} {'SpaceAfter': 'No'}
iż iż SCONJ comp mark None None
iż iż SCONJ None
Klein Klein PROPN subst:sg:nom:m3 nsubj {'Animacy': 'Inan', 'Case': 'Nom', 'Gender': 'Masc', 'Number': 'Sing'} None
nie nie PART part advmod:neg {'Polarity': 'Neg'} None
nie nie PART {'Polarity': 'Neg'}
nie ne PART {'Polarity': 'Neg'}
mieć miał VERB praet:sg:m1:imperf ccomp:cleft {'Animacy': 'Hum', 'Aspect': 'Imp', 'Gender': 'Masc', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'} None
do do ADP prep:gen case {'AdpType': 'Prep'} {'Case': 'Gen'}
do do ADP {'AdpType': 'Prep'}
ten tej DET adj:sg:gen:f:pos det {'Case': 'Gen', 'Gender': 'Fem', 'Number': 'Sing', 'PronType': 'Dem'} None
ten tej DET {'Case': 'Gen', 'Gender': 'Fem', 'Number': 'Sing', 'PronType': 'Dem'}
[Parse(word='ov', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,anim'), normal_form='ov', score=1.0, methods_stack=((DictionaryAnalyzer(), 'ov', 441, 0),)), Parse(word='ov', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,anim'), normal_form='ov', score=1.0, methods_stack=((DictionaryAnalyzer(), 'ov', 441, 0),)), Parse(word='ov', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,inan'), normal_form='ov', score=1.0, methods_stack=((DictionaryAnalyzer(), 'ov', 441, 3),)), Parse(word='ov', tag=OpencorporaTag('NPRO,dem masc,accs,sing,inan'), normal_form='ov', score=1.0, methods_stack=((DictionaryAnalyzer(), 'ov', 441, 9),))]
ten tej DET {'Case': 'Gen', 'Gender': 'Fem', 'Number': 'Sing', 'PronType': 'Dem'}
[Parse(word='toj', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,anim'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 0),)), Parse(word='toj', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,anim'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 0),)), Parse(word='toj', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,inan'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 3),)), Parse(word='toj', tag=OpencorporaTag('NPRO,dem masc,accs,sing,inan'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 9),)), Parse(word='toj', tag=OpencorporaTag('NPRO,dem sing,femn,gent'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 14),)), Parse(word='toj', tag=OpencorporaTag('NPRO,dem sing,femn,loct'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 17),)), Parse(word='toj', tag=OpencorporaTag('NPRO,dem datv,sing,femn'), normal_form='toj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'toj', 232, 20),))]
ten tej DET {'Case': 'Gen', 'Gender': 'Fem', 'Number': 'Sing', 'PronType': 'Dem'}
[Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,anim'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 0),)), Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,anim'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 0),)), Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem masc,nomn,sing,inan'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 3),)), Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem masc,accs,sing,inan'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 9),)), Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem sing,femn,gent'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 14),)), Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem sing,femn,loct'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 17),)), Parse(word='tutoj', tag=OpencorporaTag('NPRO,dem datv,sing,femn'), normal_form='tutoj', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutoj', 232, 20),))]
pora pory NOUN subst:sg:gen:f obl {'Case': 'Gen', 'Gender': 'Fem', 'Number': 'Sing'} None
zatarg zatargów NOUN subst:pl:gen:m3 iobj {'Animacy': 'Inan', 'Case': 'Gen', 'Gender': 'Masc', 'Number': 'Plur'} None
z z ADP prep:inst:nwok case {'AdpType': 'Prep', 'Variant': 'Short'} {'Case': 'Ins'}
z z ADP {'AdpType': 'Prep', 'Variant': 'Short'}
prawo prawem NOUN subst:sg:inst:n:ncol nmod:arg {'Case': 'Ins', 'Gender': 'Neut', 'Number': 'Sing'} {'SpaceAfter': 'No'}
prawo prawem NOUN {'Case': 'Ins', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='pravo', tag=OpencorporaTag('ADJF neut,nomn,sing,anim'), normal_form='pravy', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pravo', 16, 1),)), Parse(word='pravo', tag=OpencorporaTag('neut,NOUN nomn,sing'), normal_form='pravo', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pravo', 57, 0),)), Parse(word='pravo', tag=OpencorporaTag('neut,NOUN accs,sing'), normal_form='pravo', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pravo', 57, 2),)), Parse(word='pravo', tag=OpencorporaTag('neut,NOUN sing,voct'), normal_form='pravo', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pravo', 57, 12),))]
prawo prawem NOUN {'Case': 'Ins', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='zakon', tag=OpencorporaTag('masc,NOUN nomn,sing'), normal_form='zakon', score=1.0, methods_stack=((DictionaryAnalyzer(), 'zakon', 18, 0),)), Parse(word='zakon', tag=OpencorporaTag('masc,NOUN nomn,sing'), normal_form='zakon', score=1.0, methods_stack=((DictionaryAnalyzer(), 'zakon', 18, 0),)), Parse(word='zakon', tag=OpencorporaTag('masc,NOUN accs,sing'), normal_form='zakon', score=1.0, methods_stack=((DictionaryAnalyzer(), 'zakon', 18, 2),))]
oraz oraz CCONJ conj cc None None
ujawnić ujawniła VERB praet:sg:f:perf conj {'Aspect': 'Perf', 'Gender': 'Fem', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'} None
ujawnić ujawniła VERB {'Aspect': 'Perf', 'Gender': 'Fem', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='izjaviti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='izjaviti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'izjaviti', 9, 0),)), Parse(word='izjaviti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='izjaviti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'izjaviti', 9, 0),)), Parse(word='izjaviti', tag=OpencorporaTag('Refl,VERB,perf infn'), normal_form='izjaviti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'izjaviti', 34, 0),))]
ujawnić ujawniła VERB {'Aspect': 'Perf', 'Gender': 'Fem', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='objaviti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='objaviti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'objaviti', 9, 0),)), Parse(word='objaviti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='objaviti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'objaviti', 9, 0),)), Parse(word='objaviti', tag=OpencorporaTag('Refl,VERB,perf infn'), normal_form='objaviti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'objaviti', 34, 0),))]
ujawnić ujawniła VERB {'Aspect': 'Perf', 'Gender': 'Fem', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='odkryti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='odkryti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'odkryti', 185, 0),)), Parse(word='odkryti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='odkryti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'odkryti', 185, 0),))]
ujawnić ujawniła VERB {'Aspect': 'Perf', 'Gender': 'Fem', 'Mood': 'Ind', 'Number': 'Sing', 'Tense': 'Past', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='råzkryti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='råzkryti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'råzkryti', 185, 0),)), Parse(word='råzkryti', tag=OpencorporaTag('tran,VERB,perf infn'), normal_form='råzkryti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'råzkryti', 185, 0),))]
ogólny ogólne ADJ adj:pl:acc:f:pos amod {'Case': 'Acc', 'Degree': 'Pos', 'Gender': 'Fem', 'Number': 'Plur'} None
ogólny ogólne ADJ {'Case': 'Acc', 'Degree': 'Pos', 'Gender': 'Fem', 'Number': 'Plur'}
[Parse(word='generaľny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='generaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'generaľny', 16, 0),)), Parse(word='generaľny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='generaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'generaľny', 16, 0),)), Parse(word='generaľny', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='generaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'generaľny', 16, 3),)), Parse(word='generaľny', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='generaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'generaľny', 16, 9),)), Parse(word='generaľny', tag=OpencorporaTag('ADJF compb'), normal_form='generaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'generaľny', 16, 48),))]
ogólny ogólne ADJ {'Case': 'Acc', 'Degree': 'Pos', 'Gender': 'Fem', 'Number': 'Plur'}
[Parse(word='obći', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 0),)), Parse(word='obći', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 0),)), Parse(word='obći', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 3),)), Parse(word='obći', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 9),)), Parse(word='obći', tag=OpencorporaTag('ADJF masc,nomn,plur,anim'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 24),)), Parse(word='obći', tag=OpencorporaTag('ADJF compb'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 48),)), Parse(word='obći', tag=OpencorporaTag('ADJF ADVB,compb'), normal_form='obći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obći', 181, 50),))]
informacja informacje NOUN subst:pl:acc:f obj {'Case': 'Acc', 'Gender': 'Fem', 'Number': 'Plur'} None
informacja informacje NOUN {'Case': 'Acc', 'Gender': 'Fem', 'Number': 'Plur'}
[Parse(word='informacija', tag=OpencorporaTag('femn,NOUN nomn,sing'), normal_form='informacija', score=1.0, methods_stack=((DictionaryAnalyzer(), 'informacija', 13, 0),)), Parse(word='informacija', tag=OpencorporaTag('femn,NOUN nomn,sing'), normal_form='informacija', score=1.0, methods_stack=((DictionaryAnalyzer(), 'informacija', 13, 0),))]
informacja informacje NOUN {'Case': 'Acc', 'Gender': 'Fem', 'Number': 'Plur'}
[Parse(word='uvědomjeńje', tag=OpencorporaTag('tran,VERB,perf NOUN,V2NOUN'), normal_form='uvědomiti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'uvědomjeńje', 9, 33),)), Parse(word='uvědomjeńje', tag=OpencorporaTag('neut,NOUN nomn,sing'), normal_form='uvědomjeńje', score=1.0, methods_stack=((DictionaryAnalyzer(), 'uvědomjeńje', 20, 0),)), Parse(word='uvědomjeńje', tag=OpencorporaTag('neut,NOUN accs,sing'), normal_form='uvědomjeńje', score=1.0, methods_stack=((DictionaryAnalyzer(), 'uvědomjeńje', 20, 2),)), Parse(word='uvědomjeńje', tag=OpencorporaTag('neut,NOUN sing,voct'), normal_form='uvědomjeńje', score=1.0, methods_stack=((DictionaryAnalyzer(), 'uvědomjeńje', 20, 12),))]
informacja informacje NOUN {'Case': 'Acc', 'Gender': 'Fem', 'Number': 'Plur'}
[Parse(word='vědomosť', tag=OpencorporaTag('femn,NOUN nomn,sing'), normal_form='vědomosť', score=1.0, methods_stack=((DictionaryAnalyzer(), 'vědomosť', 56, 0),)), Parse(word='vědomosť', tag=OpencorporaTag('femn,NOUN nomn,sing'), normal_form='vědomosť', score=1.0, methods_stack=((DictionaryAnalyzer(), 'vědomosť', 56, 0),)), Parse(word='vědomosť', tag=OpencorporaTag('femn,NOUN accs,sing'), normal_form='vědomosť', score=1.0, methods_stack=((DictionaryAnalyzer(), 'vědomosť', 56, 2),))]
o o ADP prep:loc case {'AdpType': 'Prep'} {'Case': 'Loc'}
on jego PRON ppron3:sg:gen:m1:ter:akc:npraep nmod {'Animacy': 'Hum', 'Case': 'Gen', 'Gender': 'Masc', 'Number': 'Sing', 'Person': '3', 'PrepCase': 'Npr', 'PronType': 'Prs', 'Variant': 'Long'} None
on jego PRON {'Animacy': 'Hum', 'Case': 'Gen', 'Gender': 'Masc', 'Number': 'Sing', 'Person': '3', 'PrepCase': 'Npr', 'PronType': 'Prs', 'Variant': 'Long'}
[Parse(word='on', tag=OpencorporaTag('NPRO,pers masc,nomn,sing,anim'), normal_form='on', score=1.0, methods_stack=((DictionaryAnalyzer(), 'on', 30, 0),)), Parse(word='on', tag=OpencorporaTag('NPRO,pers masc,nomn,sing,anim'), normal_form='on', score=1.0, methods_stack=((DictionaryAnalyzer(), 'on', 30, 0),)), Parse(word='on', tag=OpencorporaTag('NPRO,pers masc,nomn,sing,inan'), normal_form='on', score=1.0, methods_stack=((DictionaryAnalyzer(), 'on', 30, 3),))]
obecny obecnym ADJ adj:sg:loc:n:pos amod {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'} None
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='aktuaľny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='aktuaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'aktuaľny', 16, 0),)), Parse(word='aktuaľny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='aktuaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'aktuaľny', 16, 0),)), Parse(word='aktuaľny', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='aktuaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'aktuaľny', 16, 3),)), Parse(word='aktuaľny', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='aktuaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'aktuaľny', 16, 9),)), Parse(word='aktuaľny', tag=OpencorporaTag('ADJF compb'), normal_form='aktuaľny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'aktuaľny', 16, 48),))]
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='prisųtny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='prisųtny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prisųtny', 16, 0),)), Parse(word='prisųtny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='prisųtny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prisųtny', 16, 0),)), Parse(word='prisųtny', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='prisųtny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prisųtny', 16, 3),)), Parse(word='prisųtny', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='prisųtny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prisųtny', 16, 9),)), Parse(word='prisųtny', tag=OpencorporaTag('ADJF compb'), normal_form='prisųtny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prisųtny', 16, 48),))]
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='pritomny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='pritomny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pritomny', 16, 0),)), Parse(word='pritomny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='pritomny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pritomny', 16, 0),)), Parse(word='pritomny', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='pritomny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pritomny', 16, 3),)), Parse(word='pritomny', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='pritomny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pritomny', 16, 9),)), Parse(word='pritomny', tag=OpencorporaTag('ADJF compb'), normal_form='pritomny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'pritomny', 16, 48),))]
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='sejčasny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='sejčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sejčasny', 16, 0),)), Parse(word='sejčasny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='sejčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sejčasny', 16, 0),)), Parse(word='sejčasny', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='sejčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sejčasny', 16, 3),)), Parse(word='sejčasny', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='sejčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sejčasny', 16, 9),)), Parse(word='sejčasny', tag=OpencorporaTag('ADJF compb'), normal_form='sejčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sejčasny', 16, 48),))]
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='sųći', tag=OpencorporaTag('intr,VERB,impf actv,masc,pres,V-ju'), normal_form='byti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 148, 33),)), Parse(word='sųći', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='sųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 181, 0),)), Parse(word='sųći', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='sųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 181, 3),)), Parse(word='sųći', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='sųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 181, 9),)), Parse(word='sųći', tag=OpencorporaTag('ADJF masc,nomn,plur,anim'), normal_form='sųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 181, 24),)), Parse(word='sųći', tag=OpencorporaTag('ADJF compb'), normal_form='sųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 181, 48),)), Parse(word='sųći', tag=OpencorporaTag('ADJF ADVB,compb'), normal_form='sųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųći', 181, 50),))]
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='tekųći', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 0),)), Parse(word='tekųći', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 0),)), Parse(word='tekųći', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 3),)), Parse(word='tekųći', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 9),)), Parse(word='tekųći', tag=OpencorporaTag('ADJF masc,nomn,plur,anim'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 24),)), Parse(word='tekųći', tag=OpencorporaTag('ADJF compb'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 48),)), Parse(word='tekųći', tag=OpencorporaTag('ADJF ADVB,compb'), normal_form='tekųći', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tekųći', 181, 50),))]
obecny obecnym ADJ {'Case': 'Loc', 'Degree': 'Pos', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='tutčasny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='tutčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutčasny', 16, 0),)), Parse(word='tutčasny', tag=OpencorporaTag('ADJF masc,nomn,sing,anim'), normal_form='tutčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutčasny', 16, 0),)), Parse(word='tutčasny', tag=OpencorporaTag('ADJF masc,nomn,sing,inan'), normal_form='tutčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutčasny', 16, 3),)), Parse(word='tutčasny', tag=OpencorporaTag('ADJF masc,accs,sing,inan'), normal_form='tutčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutčasny', 16, 9),)), Parse(word='tutčasny', tag=OpencorporaTag('ADJF compb'), normal_form='tutčasny', score=1.0, methods_stack=((DictionaryAnalyzer(), 'tutčasny', 16, 48),))]
miejsce miejscu NOUN subst:sg:loc:n:ncol nmod:arg {'Case': 'Loc', 'Gender': 'Neut', 'Number': 'Sing'} None
miejsce miejscu NOUN {'Case': 'Loc', 'Gender': 'Neut', 'Number': 'Sing'}
[Parse(word='město', tag=OpencorporaTag('neut,NOUN nomn,sing'), normal_form='město', score=1.0, methods_stack=((DictionaryAnalyzer(), 'město', 57, 0),)), Parse(word='město', tag=OpencorporaTag('neut,NOUN nomn,sing'), normal_form='město', score=1.0, methods_stack=((DictionaryAnalyzer(), 'město', 57, 0),)), Parse(word='město', tag=OpencorporaTag('neut,NOUN accs,sing'), normal_form='město', score=1.0, methods_stack=((DictionaryAnalyzer(), 'město', 57, 2),)), Parse(word='město', tag=OpencorporaTag('neut,NOUN sing,voct'), normal_form='město', score=1.0, methods_stack=((DictionaryAnalyzer(), 'město', 57, 12),))]
przebywać przebywania NOUN ger:sg:gen:n:imperf:aff nmod {'Aspect': 'Imp', 'Case': 'Gen', 'Gender': 'Neut', 'Number': 'Sing', 'Polarity': 'Pos', 'VerbForm': 'Vnoun'} {'SpaceAfter': 'No'}
przebywać przebywania NOUN {'Aspect': 'Imp', 'Case': 'Gen', 'Gender': 'Neut', 'Number': 'Sing', 'Polarity': 'Pos', 'VerbForm': 'Vnoun'}
[Parse(word='obstajati', tag=OpencorporaTag('intr,VERB,impf infn'), normal_form='obstajati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'obstajati', 122, 0),))]
przebywać przebywania NOUN {'Aspect': 'Imp', 'Case': 'Gen', 'Gender': 'Neut', 'Number': 'Sing', 'Polarity': 'Pos', 'VerbForm': 'Vnoun'}
[Parse(word='prěbyvati', tag=OpencorporaTag('intr,VERB,impf infn'), normal_form='prěbyvati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prěbyvati', 122, 0),))]
nie Nie PART part advmod:neg {'Polarity': 'Neg'} None
nie Nie PART {'Polarity': 'Neg'}
nie ne PART {'Polarity': 'Neg'}
sądzić sądzimy VERB fin:pl:pri:imperf parataxis:obj {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'} {'SpaceAfter': 'No'}
sądzić sądzimy VERB {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='domněvati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='domněvati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'domněvati', 5, 0),)), Parse(word='domněvati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='domněvati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'domněvati', 5, 0),))]
sądzić sądzimy VERB {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='mněti', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='mněti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'mněti', 142, 0),)), Parse(word='mněti', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='mněti', score=1.0, methods_stack=((DictionaryAnalyzer(), 'mněti', 142, 0),))]
sądzić sądzimy VERB {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='mněvati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='mněvati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'mněvati', 5, 0),)), Parse(word='mněvati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='mněvati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'mněvati', 5, 0),))]
sądzić sądzimy VERB {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='prědpokladati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='prědpokladati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prědpokladati', 5, 0),)), Parse(word='prědpokladati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='prědpokladati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prědpokladati', 5, 0),))]
sądzić sądzimy VERB {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='prědpolagati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='prědpolagati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prědpolagati', 5, 0),)), Parse(word='prědpolagati', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='prědpolagati', score=1.0, methods_stack=((DictionaryAnalyzer(), 'prědpolagati', 5, 0),))]
sądzić sądzimy VERB {'Aspect': 'Imp', 'Mood': 'Ind', 'Number': 'Plur', 'Person': '1', 'Tense': 'Pres', 'VerbForm': 'Fin', 'Voice': 'Act'}
[Parse(word='sųditi', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='sųditi', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųditi', 125, 0),)), Parse(word='sųditi', tag=OpencorporaTag('tran,VERB,impf infn'), normal_form='sųditi', score=1.0, methods_stack=((DictionaryAnalyzer(), 'sųditi', 125, 0),))]
